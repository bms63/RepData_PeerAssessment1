library(dpylr)
library(dplyr)
ACS_logic <- filter(ACS, ACR > 10 | AGS > 10000)
View(ACS_logic)
ACS_logic <- filter(ACS, ACR > 10 || AGS > 10000)
View(ACS_logic)
ACS_logic <- filter(ACS, ACR > 10)
View(ACS_logic)
ACS_logic <- filter(ACS, ACR >= 10)
View(ACS_logic)
ACS_logic <- filter(ACS, ACR = 10)
ACS_logic <- filter(ACS, ACR == 10)
View(ACS_logic)
class(ACS_logic)
ACS_new <- tbl_df(ACS)
ACS_logic <- filter(ACS_new, ACS > 10 | AGS > 10000)
ACS_logic <- filter(ACS_new, ACS > 10)
ACS_logic <- filter(ACS_new, ACS == 10)
View(ACS_new)
?filter
ACS_logic <- filter(ACS_new, 'ACS' == 10)
ACS_logic <- filter(ACS_new, 'ACS' == 10 | AGS > 10000)
View(ACS_logic)
ACS_logic <- filter(ACS_new, 'ACS' > 10 | AGS > 10000)
View(ACS_logic)
ACS_logic <- filter(ACS_new, "ACS" > 10 | "AGS" > 10000)
View(ACS_logic)
ACS_logic <- filter(ACS_new, ACS > 10 | AGS > 10000)
result <- ACS_new %>%filter(ACR>4 | AGS>4)
View(result)
result <- ACS_new %>%filter(ACR>10 | AGS>10000)
View(result)
result <- ACS_new %>%filter(ACR>4 | AGS>4)
View(result)
result <- ACS_new %>%filter(ACR>4 & AGS>4)
View(result)
names(ACS_new)
ACS_1 <- select(ACS_new, ACR, AGS)
View(ACS_1)
result <- ACS_new %>%filter(ACR == 3  AGS == 6)
result <- filter(ACS_new, ACR == 3 | AGS == 6)
View(result)
agricultureLogical <- filter(ACS_new, ACR == 3 | AGS == 6)
fileUrl_2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileUrl_2, destfile = "C:/Users/Owner/Desktop/ACS.csv")
library(data.table)
library(dplyr)
Gdp <- read.csv("C:/Users/Owner/Desktop/ACS.csv", stringsAsFactors = FALSE, sep = ",", row.names = NULL)
ACS <- read.csv("C:/Users/Owner/Desktop/ACS.csv", stringsAsFactors = FALSE, sep = ",", row.names = NULL)
View(ACS)
ACS_1 <- filter(ACS, ACR == 10, AGS == 6)
View(ACS_1)
ACS_1 <- filter(ACS, ACR == 3, AGS == 6)
View(ACS_1)
ACS <- read.csv("C:/Users/Owner/Desktop/ACS.csv", stringsAsFactors = FALSE, sep = ",",)
ACS_1 <- filter(ACS, ACR == 3, AGS == 6)
View(ACS_1)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile = "C:/Users/Owner/Desktop/Ed.csv")
fileUrl_2 <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl_2, destfile = "C:/Users/Owner/Desktop/GDP.csv")
library(data.table)
library(dplyr)
Gdp <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors = FALSE, sep = ",", row.names = NULL)
Educ <- read.csv("C:/Users/Owner/Desktop/Ed.csv", stringsAsFactors = FALSE, sep = ",", row.names = NULL)
#View(Gdp)
#View(Educ)
colnames(Gdp) <- "CountryCode"
colnames(Gdp)[2] <- "Ranking"
colnames(Gdp)[4] = "Country"
colnames(Gdp)[5] = "Gdp"
Gdp <- Gdp[,-c(3,6,7,8,9,10)]
Gdp <- Gdp[-c(195:330),]
Gdp <- Gdp[-c(1:4),]
row.names(Gdp) <- NULL
Educ_Gdp <- merge(Educ, Gdp, by = "CountryCode")
Q <- quantile(as.numeric(Educ_Gdp$Ranking)), probs = seq(0, 1, 0.2), na.rm = TRUE)
Q <- quantile(Educ_Gdp$Ranking, probs = seq(0, 1, 0.2), na.rm = TRUE)
Q <- quantile(as.numeric(Educ_Gdp$Ranking), probs = seq(0, 1, 0.2), na.rm = TRUE)
View(Q)
Educ_Gdp$quantileGDP <- cut(Educ_Gdp$Ranking, breaks = breaks)
Educ_Gdp$quantileGDP <- cut(as.numeric(Educ_Gdp$Ranking), breaks = breaks)
Educ_Gdp$quantileGDP <- cut(as.numeric(Educ_Gdp$Ranking), Q = Q)
Educ_Gdp$quantileGDP <- cut(as.numeric(Educ_Gdp$Ranking), breaks = Q)
View(Educ_Gdp$quantileGDP)
Educ_Gdp[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
View(Educ_Gdp)
libary(swirl)
library(swirl)
rm(list=ls())
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
ymd(25081985)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
exit()
0
exit()
exit
?
swirl()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "C:/Users/Owner/Desktop/ACS.csv")
library(data.table)
library(dplyr)
ACS <- read.csv("C:/Users/Owner/Desktop/ACS.csv")
View(ACS)
names(ACS)
splitNames <- strsplit(names(ACS), "wgtp")
View(splitNames)
splitNames[123]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "C:/Users/Owner/Desktop/GDP.csv")
View(GDP)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv")
View(GDP)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "C:/Users/Owner/Desktop/GDP.csv")
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv")
View(GDP)
names(GDP)
ans <- mean(as.numeric(X.3$GDP))
GDP <- tbl_df(GDP)
ans <- mean(as.numeric(X.3$GDP))
ans <- mean(as.numeric(X.3)$GDP))
ans <- mean(X.3$GDP)
ans <- mean(GDP$X.3)
ans <- mean(GDP$as.numeric(X.3)
ans <- mean(GDP$as.numeric(X.3))
gsub(“_”, “”, GDP$X.3)
gsub(“,”, “”, GDP$X.3)
gsub(“,”, “”, X.3)
?gsub
gsub(“,”, “”, GDP)
gsub(“\\,”, “”, GDP)
gsub(“,”, “”, GDP$X.3, fixed = TRUE)
gsub(,, “”, GDP$X.3, fixed = TRUE)
sub(",","", GDP$X.3)
ans <- sub(",","", GDP$X.3)
mean(ans)
mean(as.numeric(ans))
mean(as.integer(ans))
class(ans)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=False)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE)
GDP <- tbl_df(GDP)
ans <- sub(",","", GDP$X.3)
mean(ans)
GDP <- sub(",","", GDP$X.3)
View(GDP)
GDP <- gsub(",","", GDP$X.3)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE)
GDP <- tbl_df(GDP)
ans <- gsub(",","", GDP$X.3)
GDP <- gsub(",","", GDP$X.3)
View(GDP)
mean(GDP$x)
mean(GDP$as.numeric(x))
New <- GDP[c(5:194),]
New <- GDP[,c(5:194)]
GDP <- GDP(gsub(",","", GDP$X.3))
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL)
View(GDP)
colnames(Gdp) <- "CountryCode"
colnames(Gdp)[2] <- "Ranking"
colnames(Gdp)[4] = "Country"
colnames(Gdp)[5] = "Gdp"
Gdp <- Gdp[,-c(3,6,7,8,9,10)]
Gdp <- Gdp[-c(195:330),]
Gdp <- Gdp[-c(1:4),]
row.names(Gdp) <- NULL
colnames(GDP) <- "CountryCode"
colnames(GDP)[2] <- "Ranking"
colnames(GDP)[4] = "Country"
colnames(GDP)[5] = "GDP"
GDP <- GDP[,-c(3,6,7,8,9,10)]
GDP <- GDP[-c(195:330),]
GDP <- GDP[-c(1:4),]
row.names(GDP) <- NULL
View(GDP)
GDP_Sep <- gsub(",","", GDP$X.3)
View(GDP_Sep)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL)
colnames(GDP) <- "CountryCode"
colnames(GDP)[2] <- "Ranking"
colnames(GDP)[4] = "Country"
colnames(GDP)[5] = "Gdp"
GDP <- GDP[,-c(3,6,7,8,9,10)]
GDP <- GDP[-c(195:330),]
GDP <- GDP[-c(1:4),]
row.names(GDP) <- NULL
GDP_Sep <- gsub(",","", GDP$Gdp)
View(GDP_Sep)
class(GDP_Sep)
data <- data.matrix(GDP_Sep)
class(GDP_Sep)
class(data)
mean(data$x)
mean(data, x)
?mean()
summarize(data, mean(x))
summarize(GDP_Sep, mean(x))
colMeans(GDP_Sep, na.rm = FALSE, dims = 1)
colMeans(data, na.rm = FALSE, dims = 1)
colMeans(GDP_Sep, na.rm = FALSE, dims = 2)
colMeans(GDP, na.rm = False, dims= 4)
colMeans(GDP, na.rm = FALSE, dims= 4)
colMeans(GDP, na.rm = FALSE, dims= 5)
colMeans(GDP, na.rm = FALSE)
colMeans(as.numeric(GDP), na.rm = FALSE)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL)
colnames(GDP) <- "CountryCode"
colnames(GDP)[2] <- "Ranking"
colnames(GDP)[4] = "Country"
colnames(GDP)[5] = "Gdp"
GDP <- GDP[,-c(3,6,7,8,9,10)]
GDP <- GDP[-c(195:330),]
GDP <- GDP[-c(1:4),]
row.names(GDP) <- NULL
str(GDP)
GDP <- tbl_df(GDP)
summarize(GDP)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL)
colnames(GDP) <- "CountryCode"
colnames(GDP)[2] <- "Ranking"
colnames(GDP)[4] = "Country"
colnames(GDP)[5] = "Gdp"
GDP <- GDP[,-c(3,6,7,8,9,10)]
GDP <- GDP[-c(195:330),]
GDP <- GDP[-c(1:4),]
row.names(GDP) <- NULL
summarize(GDP)
View(GDP)
GDP_Sep <- gsub(",","", GDP$Gdp)
sapply(GDP, GDP_Sep)
class(GDP)
colMeans(GDP)
colMeans(GDP$Gdp)
apply(GDP, 4, mean)
sapply(GDP, mean)
m <- data.frame(matrix(GDP, ncol = 4))
colMeans(m)
mean(m)
G <- as.numeric(GDP_Sep)
View(G)
class(G)
mean(G$x)
mean(G, x)
colMean(G, dims =1)
colMeans(G, dims =1)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL)
colnames(GDP) <- "CountryCode"
colnames(GDP)[2] <- "Ranking"
colnames(GDP)[4] = "Country"
colnames(GDP)[5] = "Gdp"
GDP <- GDP[,-c(3,6,7,8,9,10)]
GDP <- GDP[-c(195:330),]
GDP <- GDP[-c(1:4),]
row.names(GDP) <- NULL
View(GDP)
mean(as.numeric(GDP$Gdp))
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL, na.rm =FALSE)
colnames(GDP) <- "CountryCode"
colnames(GDP)[2] <- "Ranking"
colnames(GDP)[4] = "Country"
colnames(GDP)[5] = "Gdp"
GDP <- GDP[,-c(3,6,7,8,9,10)]
GDP <- GDP[-c(195:330),]
GDP <- GDP[-c(1:4),]
row.names(GDP) <- NULL
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL)
colnames(GDP) <- "CountryCode"
colnames(GDP)[2] <- "Ranking"
colnames(GDP)[4] = "Country"
colnames(GDP)[5] = "Gdp"
GDP <- GDP[,-c(3,6,7,8,9,10)]
GDP <- GDP[-c(195:330),]
GDP <- GDP[-c(1:4),]
row.names(GDP) <- NULL
mean(GDP[["Gdp"]])
mean(GDP[[as.numeric("Gdp")]])
mean(GDP[[as.numeric(as.character("Gdp"))]])
cols = c(1, 2, 3, 4);
GDP[,cols] = apply(GDP[,cols], 2, function(x) as.numeric(as.character(x));
cleanedData <- gsub(",", "", GDP[5:194, 5])
numData <- as.numeric(cleanedData)
class(numData)
View(numData)
View(cleanedData)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL)
cleanedData <- gsub(",", "", GDP[5:194, 5])
View(cleanedData)
numData <- as.numeric(cleanedData)
View(numData)
mean(numData)
GDP <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors=FALSE, sep = ",", row.names = NULL)
View(GDP)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "C:/Users/Owner/Desktop/GDP.csv")
library(data.table)
library(dplyr)
Gdp <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors = FALSE, sep = ",", row.names = NULL)
#View(Gdp)
#View(Educ)
colnames(Gdp) <- "CountryCode"
colnames(Gdp)[2] <- "Ranking"
colnames(Gdp)[4] = "countryName"
colnames(Gdp)[5] = "Gdp"
Gdp <- Gdp[,-c(3,6,7,8,9,10)]
Gdp <- Gdp[-c(195:330),]
Gdp <- Gdp[-c(1:4),]
row.names(Gdp) <- NULL
colnames(Gdp) <- "CountryCode"
colnames(Gdp)[2] <- "Ranking"
colnames(Gdp)[4] = "countryName"
colnames(Gdp)[5] = "Gross"
Gdp <- Gdp[,-c(3,6,7,8,9,10)]
Gdp <- Gdp[-c(195:330),]
Gdp <- Gdp[-c(1:4),]
row.names(Gdp) <- NULL
Gdp <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors = FALSE, sep = ",", row.names = NULL)
#View(Gdp)
#View(Educ)
colnames(Gdp) <- "CountryCode"
colnames(Gdp)[2] <- "Ranking"
colnames(Gdp)[4] = "Country"
colnames(Gdp)[5] = "Gdp"
Gdp <- Gdp[,-c(3,6,7,8,9,10)]
Gdp <- Gdp[-c(195:330),]
Gdp <- Gdp[-c(1:4),]
row.names(Gdp) <- NULL
View(Gdp)
colnames(Gdp)[5] = "Gross"
colnames(Gdp)[4] = "Gross"
colnames(Gdp)[3] = "countryName"
View(Gdp)
grep("^United",countryNames), 3
grep("*United",countryNames)
colnames(Gdp)[3] = "countryNames"
grep("^United",countryNames)
View(Gdp)
grep("*United",countryNames)
grep("United$",countryNames)
grep("*United",countryNames)
names(Gdp)
?grep()
library(data.table)
grep("*United",countryNames)
grep("*United", Gdp$countryNames)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile = "C:/Users/Owner/Desktop/Ed.csv")
fileUrl_2 <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl_2, destfile = "C:/Users/Owner/Desktop/GDP.csv")
library(data.table)
library(dplyr)
Gdp <- read.csv("C:/Users/Owner/Desktop/GDP.csv", stringsAsFactors = FALSE, sep = ",", row.names = NULL)
Educ <- read.csv("C:/Users/Owner/Desktop/Ed.csv", stringsAsFactors = FALSE, sep = ",", row.names = NULL)
#View(Gdp)
#View(Educ)
colnames(Gdp) <- "CountryCode"
colnames(Gdp)[2] <- "Ranking"
colnames(Gdp)[4] = "Country"
colnames(Gdp)[5] = "Gdp"
Gdp <- Gdp[,-c(3,6,7,8,9,10)]
Gdp <- Gdp[-c(195:330),]
Gdp <- Gdp[-c(1:4),]
row.names(Gdp) <- NULL
Educ_Gdp <- merge(Educ, Gdp, by = "CountryCode")
View(Educ_Gdp)
grep("June", Educ_Gdp$Special.Notes)
grep("Fiscal year end: June", Educ_Gdp$Special.Notes)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(sampleTimes)
grep("2012", sampleTimes$x)
grep("Fiscal year end: June", Educ_Gdp$Special.Notes)
grep("2012", sampleTimes)
length(grep("2012", sampleTimes))
s <- sampleTimes[,c(1261:1510)]
s <- sampleTimes[c(1261:1510),]
s <- sampleTimes[-c(1261:1510),]
s <- sampleTimes[1261,]
class(sampleTimes)
```
setwd("C:/Users/Owner/Desktop/ReproResearch/RepData_PeerAssessment1")
library("dplyr")
library(ggplot2)
activity = read.csv("activity.csv")
new_activity = na.omit(activity)
new_activity <- new_activity[which(new_activity$steps > 0),]
new_activity <- tbl_df(new_activity)
by_date <- group_by(new_activity, date)
sum_Results <- summarize(by_date, sum(steps))
colnames(sum_Results) <- c("Date", "Steps")
knitr::kable(head(sum_Results))
hist(sum_Results$Steps, main ="", xlab="Number of Steps taken each Day", ylab = "", breaks = 50)
mean_Results <- as.integer(mean(sum_Results$Steps))
median_Results <- median(sum_Results$Steps)
by_Interval <- aggregate(steps ~ interval, data = new_activity, FUN =
mean  )
by_Interval
new_activity <- read.csv(unz("activity.zip", "activity.csv"))
setwd("C:/Users/Owner/Desktop/ReproResearch/RepData_PeerAssessment1")
new_activity <- read.csv(unz("activity.zip", "activity.csv"))
new_activity <- read.csv(unz("C:/Users/Owner/Desktop/ReproResearch/RepData_PeerAssessment1/activity.zip", "activity.csv"))
library(xlsx)
new_activity <- read.csv(unz("activity.zip", "activity.csv"))
new_activity <- read.csv(unz("activity.zip", "activity.csv", mode = "wb"))
new_activity <- read.csv(unz("activity.zip", "activity.csv"),mode = "wb")
new_activity <- read.csv("activity.csv")
setwd("C:/Users/Owner/Desktop/ReproResearch/RepData_PeerAssessment1")
new_activity <- read.csv("activity.csv")
setwd("C:/Users/Owner/Desktop/ReproResearch/RepData_PeerAssessment1")
new_activity <- read.csv("activity.csv")
new_activity$date <- as.POSIXct(new_activity$date, format="%Y-%m-%d")
new_activity <- as.POSIXct(new_activity$date, format="%Y-%m-%d")
new_activity
sum_Results <- tapply(new_activity$steps, new_activity$date, sum)
new_activity <- read.csv("activity.csv", stringsAsFactors=FALSE)
new_activity <- as.POSIXct(new_activity$date, format="%Y-%m-%d")
sum_Results <- tapply(new_activity$steps, new_activity$date, sum)
new_activity <- read.csv("activity.csv")
tapply(new_activity$steps, new_activity$date, sum)
hist(sum_Results, main ="", xlab="Number of Steps taken each Day", ylab = "", breaks = 20)
hist(as.numeric(sum_Results), main ="", xlab="Number of Steps taken each Day", ylab = "", breaks = 20)
str(sum_Results)
names(sum_Results)
hist(sum_Results$Steps, sum_Results$Date, main ="", xlab="Number of Steps taken each Day", ylab = "", breaks = 20)
hist(sum_Results$Steps, main ="", xlab="Number of Steps taken each Day", ylab = "", breaks = 20)
mean_Results <- as.integer(mean(sum_Results$Steps))
mean_Results
median_Results <- median(sum_Results$Steps)
median_Results
new_activity$interval.factor <- as.factor(new_activity$interval)
new_activity <- as.factor(new_activity$interval)
activity_interval <- activity %>% group_by(interval.factor) %>%
summarise(mean.steps = mean(steps, na.rm =TRUE))
activity_interval <- activity %>% group_by(interval) %>%
summarise(mean.steps = mean(steps, na.rm =TRUE))
activity_interval <- new_activity %>% group_by(interval) %>%
summarise(mean.steps = mean(steps, na.rm =TRUE))
new_activity <- as.factor(new_activity$interval)
activity$interval.factor <- as.factor(activity$interval)
activity_interval <- activity %>% group_by(interval.factor) %>%
summarise(mean.steps = mean(steps, na.rm =TRUE))
activity_interval
activity_interval$interval <- as.numeric(as.character(activity_interval$interval.factor))
plot(activity_interval$interval, activity_interval$mean.steps, type = "l", xaxt="n",
xlab = "<-----------------Morning         5-minute interval          Night----------------->",
ylab = "mean steps", main = "Daily Activity Pattern", sub = "Average steps recorded for October-November 2012")
axis(1, at = seq(100, 2300, by = 100), las = 2)
activity_interval$interval <- as.numeric(as.character(activity_interval$interval.factor))
plot(activity_interval$interval, activity_interval$mean.steps, type = "l", xaxt="n",  ylab = "mean steps", main = "Daily Activity Pattern", sub = "Average steps recorded for October-November 2012")
axis(1, at = seq(100, 2300, by = 100), las = 2)
activity_interval$interval <- as.numeric(as.character(activity_interval$interval.factor))
plot(activity_interval$interval, activity_interval$mean.steps, type = "l", xaxt="n",  ylab = "Mean Steps", xlab = "Interval", main = "Daily Activity Pattern")
axis(1, at = seq(100, 2300, by = 100), las = 2)
max_steps_interval <- which.max(activity_interval$mean.steps)
print(activity_interval[max_steps_interval,])
max_steps_interval <- which.max(activity_interval$mean.steps)
max_steps_interval
print(activity_interval[max_steps_interval,])
new_activity <- read.csv("activity.csv")
new_activity = na.omit(activity)
new_activity <- new_activity[which(new_activity$steps > 0),]
new_activity <- tbl_df(new_activity)
by_date <- group_by(new_activity, date)
sum_Results <- summarize(by_date, sum(steps))
colnames(sum_Results) <- c("Date", "Steps")
knitr::kable(head(sum_Results))
hist(sum_Results$Steps, main ="", xlab="Number of Steps taken each Day", ylab = "", breaks = 20)
setwd("C:/Users/Owner/Desktop/ReproResearch/RepData_PeerAssessment1")
new_activity <- read.csv("activity.csv")
activity$interval.factor <- as.factor(new_activity$interval)
activity_interval <- activity %>% group_by(interval.factor) %>%
summarise(mean.steps = mean(steps, na.rm =TRUE))
activity$interval.factor <- as.factor(new_activity$interval)
activity_interval <- new_activity %>% group_by(interval.factor) %>%
summarise(mean.steps = mean(steps, na.rm =TRUE))
activity$interval.factor <- as.factor(new_activity$interval)
activity_interval <- activity$interval.factor %>% group_by(interval.factor) %>%
summarise(mean.steps = mean(steps, na.rm =TRUE))
new_activity$interval.factor <- as.factor(new_activity$interval)
activity_interval <- new_activity %>% group_by(interval.factor) %>%
summarise(mean.steps = mean(steps, na.rm =TRUE))
activity_interval
activity_interval$interval <- as.numeric(as.character(activity_interval$interval.factor))
plot(activity_interval$interval, activity_interval$mean.steps, type = "l", xaxt="n",  ylab = "Mean Steps", xlab = "Interval", main = "Daily Activity Pattern")
axis(1, at = seq(100, 2300, by = 100), las = 2)
<!-- rmarkdown v1 -->
